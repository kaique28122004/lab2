#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#define maxsenha 100

typedef struct {
    char tipo;
    int num;
    int consumida;
} senha;

senha senhas[maxsenha];
int totalsenha = 0;
int contador = 121;

void inserirNormal() {
    if (totalsenha >= maxsenha) {
        printf("limite atingido\n");
        return;
    }
    senhas[totalsenha].tipo = 'n';
    senhas[totalsenha].num = contador;
    senhas[totalsenha].consumida = 0;

    printf("vc recebeu a senha normal n N%d \n", contador);

    contador++;
    totalsenha++;
}

void inserirPrioridade() {
    if (totalsenha >= maxsenha) {
        printf("limite atingido\n");
        return;
    }
    senhas[totalsenha].tipo = 'p';
    senhas[totalsenha].num = contador;
    senhas[totalsenha].consumida = 0;

    printf("vc recebeu a senha prioridade n P%d \n", contador);

    contador++;
    totalsenha++;
}

void consumirSenha() {
    for (int i = 0; i < totalsenha; i++) {
        if (senhas[i].consumida == 0 && senhas[i].tipo == 'p') {
            senhas[i].consumida = 1;
            printf("senha prioritaria p%d consumida\n", senhas[i].num);
            return;
        }
    }

    for (int i = 0; i < totalsenha; i++) {
        if (senhas[i].consumida == 0 && senhas[i].tipo == 'n') {
            senhas[i].consumida = 1;
            printf("senha normal n%d consumida\n", senhas[i].num);
            return;
        }
    }

    printf("nenhuma senha disponivel\n");
}

void mostrarmenu() {
    printf("selecione uma das opÃ§pes\n");
    printf("n-nova senha normal\n");
    printf("p-nova senha prioridade\n");
    printf("c-consumir proxima senha\n");
    printf("s-sair do programa\n");
    printf("v-vizualizar todas as senhas\n");
    printf("escolha:\n");
}

int main() {
  char opcao;
   do {
     mostrarmenu();
      scanf(" %c", &opcao);

     switch (opcao) {
        case 'N':
         case 'n':
          inserirNormal();
           break;

         case 'P':
         case 'p':
           inserirPrioridade();
            break;

         case 'C':
         case 'c':
           consumirSenha();
             break;
         case 'S':
         case 's':
          printf("saindo...\n");
          break;

         default:
          printf("opcao invalida\n");
           break;
        }
    } while (opcao != 'S' && opcao != 's');

    return 0;
}